{
    "contents" : "#'  @description Derives value of gaussian copula\n#'  @param u value of frist marginal for random variable X: $P(X<x)=u$, number, $u in (0;1)$\n#'  @param v value of second marginal for random variable Y: $P(Y<v)=u$, number, $v in (0;1)$\n#'  @param rho correlation between X and Y, $rho in [0;1)$\n#'  @param nsteps number of steps used for each x and y\n#'  @return value of copula in point $(u,v)$, number\n#'  @title Gauss copula \ncopula.gauss <- function(u,v,rho,nsteps){\n    \n  if (!((u > 0) & (u < 1))){\n    stop('First marginal Prob(X<x) u must be in (0;1)')\n  }\n  \n  if (!((v > 0) & (v < 1))){\n    stop('Second marginal Prob(Y<y) u must be in (0;1)')\n  }\n  \n  if (!((rho >= 0) & (rho < 1))){\n    stop('Correlation coefficient rho must be in [0;1)')\n  }\n  \n  if (!(nsteps > 0)){\n    stop('Number of steps in copula approximation nsteps must be greater than zero')\n  }\n  \n  x.min <- -3\n  x.max <- qnorm(u, mean = 0, sd = 1)\n  dx <- (x.max-x.min)/nsteps\n  x <- seq(x.min, x.max, by = dx)\n  \n  y.min <- -3\n  y.max <- qnorm(v, mean = 0, sd = 1)\n  dy <- (y.max-y.min)/nsteps\n  y <- seq(y.min, y.max, by = dy)\n \n  term <- matrix(, nrow = length(x), ncol = length(y))\n  for(i in 1:length(x)){\n    for(j in 1:length(y)){\n      term[i,j] <- exp(-1*(x[i]^2-2*rho*x[i]*y[j]+y[j]^2)/(2*(1-rho^2)))\n    }\n  }\n  triangle <- function(x,d){\n    0.5*d*(2*sum(x)-x[1]-x[length(x)])\n  }\n  sum.part <- apply(term,1,triangle, d = dy)\n  sum.total <- triangle(sum.part, d = dx)\n  return(sum.total/(2*pi*sqrt(1-rho^2)))\n}",
    "created" : 1427322679040.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "338796465",
    "id" : "62FC1623",
    "lastKnownWriteTime" : 1427323039,
    "path" : "~/git/VaRgcop/R/copula.gauss.R",
    "project_path" : "R/copula.gauss.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}